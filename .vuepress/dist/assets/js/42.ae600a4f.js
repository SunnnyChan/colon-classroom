(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{286:function(r,e,a){"use strict";a.r(e);var t=a(28),v=Object(t.a)({},(function(){var r=this,e=r.$createElement,a=r._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"类型系统与编程语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型系统与编程语言"}},[r._v("#")]),r._v(" 类型系统与编程语言")]),r._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[r._v("#")]),r._v(" 概念")]),r._v(" "),a("h3",{attrs:{id:"program-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#program-errors"}},[r._v("#")]),r._v(" Program Errors")]),r._v(" "),a("ul",[a("li",[r._v("trapped errors")])]),r._v(" "),a("p",[r._v("导致程序终止执行，如除0，Java中数组越界访问")]),r._v(" "),a("ul",[a("li",[r._v("untrapped errors")])]),r._v(" "),a("p",[r._v("出错后继续执行，但可能出现任意行为。如C里的缓冲区溢出、Jump到错误地址")]),r._v(" "),a("h3",{attrs:{id:"forbidden-behaviours"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#forbidden-behaviours"}},[r._v("#")]),r._v(" Forbidden Behaviours")]),r._v(" "),a("p",[r._v("语言设计时，可以定义一组forbidden behaviors."),a("br"),r._v("\n它必须包括所有untrapped errors, 但可能包含trapped errors.")]),r._v(" "),a("h3",{attrs:{id:"well-behaved、ill-behaved"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#well-behaved、ill-behaved"}},[r._v("#")]),r._v(" Well behaved、ill behaved")]),r._v(" "),a("p",[r._v("如果程序执行不可能出现forbidden behaviors, 则为well behaved。"),a("br"),r._v("\nill behaved: 否则为ill behaved...")]),r._v(" "),a("p",[a("img",{attrs:{src:"pic/error_type.png",alt:""}})]),r._v(" "),a("h2",{attrs:{id:"强、弱类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强、弱类型"}},[r._v("#")]),r._v(" 强、弱类型")]),r._v(" "),a("ul",[a("li",[r._v("强类型strongly typed")])]),r._v(" "),a("p",[r._v("如果一种语言的所有程序都是well behaved，则该语言为strongly typed。")]),r._v(" "),a("ul",[a("li",[r._v("弱类型weakly typed")])]),r._v(" "),a("p",[r._v("否则为weakly typed。"),a("br"),r._v("\n比如C语言的缓冲区溢出，属于trapped errors，即属于forbidden behaviors..故C是弱类型")]),r._v(" "),a("h2",{attrs:{id:"动态、静态类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态、静态类型"}},[r._v("#")]),r._v(" 动态、静态类型")]),r._v(" "),a("ul",[a("li",[r._v("静态类型 statically")])]),r._v(" "),a("p",[r._v("如果在编译时拒绝ill behaved程序，则是statically typed。")]),r._v(" "),a("ul",[a("li",[a("ul",[a("li",[r._v("静态类型可以分为两种：")])])])]),r._v(" "),a("p",[r._v("如果类型是语言语法的一部分，在是explicitly typed显式类型"),a("br"),r._v("\n如果类型通过编译时推导，是implicity typed隐式类型, 比如ML和Haskell")]),r._v(" "),a("ul",[a("li",[r._v("动态类型dynamiclly")])]),r._v(" "),a("p",[r._v("如果在运行时拒绝ill behaviors, 则是dynamiclly typed。")]),r._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[r._v("#")]),r._v(" 总结")]),r._v(" "),a("p",[r._v("无类型： 汇编"),a("br"),r._v("\n弱类型、静态类型 ： C/C++"),a("br"),r._v("\n弱类型、动态类型检查： Perl/PHP"),a("br"),r._v("\n强类型、静态类型检查 ：Java/C#"),a("br"),r._v("\n强类型、动态类型检查 ：Python, Scheme"),a("br"),r._v("\n静态显式类型 ：Java/C"),a("br"),r._v("\n静态隐式类型 ：Ocaml, Haskell")]),r._v(" "),a("p",[a("img",{attrs:{src:"pic/language_type-system.png",alt:""}})]),r._v(" "),a("h2",{attrs:{id:"参考："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考："}},[r._v("#")]),r._v(" 参考：")]),r._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://homepage.divms.uiowa.edu/~tinelli/classes/185/Fall06/notes/cardelli-95.pdf",target:"_blank",rel:"noopener noreferrer"}},[r._v("《Type Systems》"),a("OutboundLink")],1)]),r._v(" "),a("li",[a("a",{attrs:{href:"http://ropas.snu.ac.kr/~kwang/520/pierce_book.pdf",target:"_blank",rel:"noopener noreferrer"}},[r._v("《Type Systems for Programming Languages》"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);